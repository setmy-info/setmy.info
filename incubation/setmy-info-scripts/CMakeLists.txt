cmake_minimum_required (VERSION 3.13.4)

PROJECT (setmy-info-scripts)

IF(CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME STREQUAL "FreeBSD")
    SET (CMAKE_INSTALL_PREFIX  "/opt/setmy.info")
ENDIF()

SET (PROJECT_MODULE_EPOCH_NUMBER  0)
SET (PROJECT_MODULE_VERSION_MAJOR 1)
SET (PROJECT_MODULE_VERSION_MINOR 0)
SET (PROJECT_MODULE_VERSION_BUILD 0)
SET (PROJECT_MODULE_VERSION_PATCH ${PROJECT_MODULE_VERSION_BUILD})
SET (PROJECT_MODULE_VERSION_REVISION 0)

SET (EXECUTABLE_OUTPUT_PATH    ${PROJECT_BINARY_DIR}/bin)
SET (BINARY_OUTPUT_PATH        ${PROJECT_BINARY_DIR}/bin)
SET (LIBRARY_OUTPUT_PATH       ${PROJECT_BINARY_DIR}/lib)
SET (MAN_OUTPUT_PATH           ${PROJECT_BINARY_DIR}/man)
SET (DOC_OUTPUT_PATH           ${PROJECT_BINARY_DIR}/doc)

SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS true)

ADD_CUSTOM_TARGET(build       ALL)
ADD_CUSTOM_TARGET(cleaning    CLEAN)
ADD_CUSTOM_TARGET(gzipman     mkdir -p ${MAN_OUTPUT_PATH}/man1 && cp ${MAN_OUTPUT_PATH}/*.1 ${MAN_OUTPUT_PATH}/man1 && gzip -f ${MAN_OUTPUT_PATH}/man1/example.1)
ADD_CUSTOM_TARGET(setprofiles mkdir -p ${LIBRARY_OUTPUT_PATH}/profiles && cp -R ./profiles/ ${LIBRARY_OUTPUT_PATH})
ADD_CUSTOM_TARGET(binClean    rm -r ./bin)
ADD_CUSTOM_TARGET(libClean    rm -r ./lib)

ADD_DEPENDENCIES(build        gzipman)
ADD_DEPENDENCIES(build        setprofiles)
ADD_DEPENDENCIES(cleaning     binClean)
ADD_DEPENDENCIES(cleaning     libClean)

INSTALL(PROGRAMS ${PROJECT_BINARY_DIR}/src/term DESTINATION bin)
INSTALL(FILES "${LIBRARY_OUTPUT_PATH}/profiles" DESTINATION lib)
INSTALL(FILES "${MAN_OUTPUT_PATH}/man1/example.1.gz" DESTINATION man/man1)
# Rows below generated with 'ls'
#INSTALL(FILES "${PROJECT_BINARY_DIR}/target/lib/log4j-1.2.16.jar" DESTINATION lib)

CONFIGURE_FILE("${PROJECT_SOURCE_DIR}/src/example" "${PROJECT_BINARY_DIR}/bin/example")

SET(CPACK_RPM_PACKAGE_DEBUG               true)
SET(CPACK_PACKAGE_NAME                    "${PROJECT_NAME}")
SET(CPACK_PACKAGE_VENDOR                  "Hear And See Systems LLC")
SET(CPACK_PACKAGE_DESCRIPTION             "setmy.info scripts")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY     "setmy.info scripts Installation Example")
SET(CPACK_PACKAGE_VERSION                 "${PROJECT_MODULE_VERSION_MAJOR}.${PROJECT_MODULE_VERSION_MINOR}.${PROJECT_MODULE_VERSION_PATCH}")
SET(CPACK_PACKAGE_FILE_NAME               "${CPACK_PACKAGE_NAME}-${PROJECT_MODULE_VERSION_MAJOR}.${PROJECT_MODULE_VERSION_MINOR}.${PROJECT_MODULE_VERSION_PATCH}.noarch")
SET(CPACK_PACKAGE_VERSION_MAJOR           "${PROJECT_MODULE_VERSION_MAJOR}")
SET(CPACK_PACKAGE_VERSION_MINOR           "${PROJECT_MODULE_VERSION_MINOR}")
SET(CPACK_PACKAGE_VERSION_PATCH           "${PROJECT_MODULE_VERSION_PATCH}")
SET(CPACK_PACKAGE_INSTALL_DIRECTORY       "CPack Component Example")
SET(CPACK_RPM_POST_INSTALL_SCRIPT_FILE    "${PROJECT_SOURCE_DIR}/src/main/bash/post.install.sh")
SET(CPACK_RPM_POST_UNINSTALL_SCRIPT_FILE  "${PROJECT_SOURCE_DIR}/src/main/bash/un.install.sh")
SET(CPACK_RPM_PACKAGE_SUMMARY             "Summary")
SET(CPACK_RPM_PACKAGE_NAME                ${PROJECT_NAME})
SET(CPACK_GENERATOR                       "TGZ;RPM;STGZ")
SET(CPACK_PACKAGING_INSTALL_PREFIX        ${CMAKE_INSTALL_PREFIX})
SET(CPACK_PACKAGE_RELOCATABLE             TRUE)
#SET(CPACK_RPM_PACKAGE_REQUIRES            "some-else >= 1.0.0")

# http://www.debian.org/doc/debian-policy/ch-controlfields.html
# https://wiki.ubuntu.com/PackagingGuide/Basic?action=show&redirect=HowToBuildDebianPackagesFromScratch/
SET(CPACK_DEBIAN_PACKAGE_NAME             "${PROJECT_NAME}")
SET(CPACK_DEBIAN_PACKAGE_VERSION          "${CPACK_PACKAGE_VERSION}")
SET(CPACK_DEBIAN_PACKAGE_MAINTAINER       "Imre Tabur <imre.tabur@eesti.ee>")
SET(CPACK_DEBIAN_PACKAGE_DESCRIPTION      "Example cmake")
#SET(CPACK_DEBIAN_PACKAGE_DEPENDS          "some-else (>= 1.0.0)")
SET(CPACK_DEBIAN_PACKAGE_PRIORITY         "optional")
SET(CPACK_DEBIAN_PACKAGE_SECTION          "libs")
SET(CPACK_DEBIAN_ARCHITECTURE             "all")

include(CPack)
