apiVersion: apps/v1
kind: Deployment
metadata:
    name: microservice-deployment
    namespace: microservice-local
    labels:
        app: microservice-deployment
spec:
    #replicas: 3
    replicas: 2
    selector:
        matchLabels:
            app: microservice-deployment
    template:
        metadata:
            labels:
                app: microservice-deployment
        spec:
            containers:
                -   name: microservice
                    #image: docker.io/setmy.info/springboot-start-project:latest
                    #image: library/springboot-start-project:latest
                    image: springboot-start-project:latest
                    # For example pulling is not needed in Minikube
                    #command: [ "java-execute" ]
                    command: [ "java" ]
                    args: [ "-jar", "/opt/setmy.info/lib/microservice.jar", "--spring.profiles.active=local" ]
                    imagePullPolicy: Never
                    ports:
                        -   name: ms-port
                            containerPort: 8080
                    env:
                        # For Spring boot
                        -   name: APPLICATION_PROFILES
                            value: "local"
                        ## From config-map
                        -   name: SPRING_DATASOURCE_URL
                            valueFrom:
                                configMapKeyRef:
                                    name: microservice-config-map
                                    key: spring-datasource-url
                                    optional: false
                        -   name: POD_NAMESPACE
                            valueFrom:
                                fieldRef:
                                    fieldPath: metadata.namespace
                        -   name: POD_NAME
                            valueFrom:
                                fieldRef:
                                    fieldPath: metadata.name
                        -   name: NODE_NAME
                            valueFrom:
                                fieldRef:
                                    fieldPath: spec.nodeName
                        -   name: INFINISPAN_SERVER_LIST
                            valueFrom:
                                configMapKeyRef:
                                    name: microservice-config-map
                                    key: infinispan-server-list
                                    optional: false
                        ## From secrets
                        -   name: SPRING_DATASOURCE_USERNAME
                            valueFrom:
                                secretKeyRef:
                                    name: microservice-secrets-map
                                    key: spring-datasource-username
                                    optional: false
                        -   name: SPRING_DATASOURCE_PASSWORD
                            valueFrom:
                                secretKeyRef:
                                    name: microservice-secrets-map
                                    key: spring-datasource-password
                                    optional: false
                        -   name: INFINISPAN_AUTH_USERNAME
                            valueFrom:
                                secretKeyRef:
                                    name: microservice-secrets-map
                                    key: infinispan-auth-username
                                    optional: false
                        -   name: INFINISPAN_AUTH_PASSWORD
                            valueFrom:
                                secretKeyRef:
                                    name: microservice-secrets-map
                                    key: infinispan-auth-password
                                    optional: false
#                    volumeMounts:
#                        -   name: nfs-volume
#                            mountPath: /mnt/gintra
#            volumes:
#                -   name: nfs-volume
#                    persistentVolumeClaim:
#                        claimName: xyz-nfs-persistent-volume-claim
