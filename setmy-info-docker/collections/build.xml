<?xml version="1.0" encoding="utf-8"?>

<project name="setmy-info-docker-collections" default="all" basedir=".">

    <property file="build.properties"/>

    <target name="all" depends="download"/>

    <target name="download"
            depends="init,download-sbcl,download-jdk,download-jdk17,download-node,download-ant,download-maven,download-gradle,
            download-cmake,download-dvc,download-tomcat,download-zeebe,download-infinispan,download-hsqldb,download-julia,download-go,download-jenkins"
    />

    <!-- ######################## -->

    <target name="init">
        <mkdir dir="${SMI_TEMP_DOCKER_DIR}"/>
        <mkdir dir="${SMI_DOWNLOAD_DOCKER_DIR}"/>
    </target>

    <!-- ######################## -->

    <target name="setmy-info-scripts">
        <ant antfile="build.xml" dir="${SMI_SCRIPTS_DIR}" target="all"/>
        <copy todir="${SMI_DOWNLOAD_DOCKER_DIR}">
            <fileset dir="${SMI_SCRIPTS_DIR}" includes="*.rpm"/>
        </copy>
    </target>

    <!-- ######################## -->

    <target name="sbcl" depends="download-sbcl"/>

    <target name="download-sbcl">
        <get src="${SBCL_TAR_BZ2_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${SBCL_TAR_BZ2_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="jdk" depends="download-jdk"/>

    <target name="download-jdk">
        <get src="${JDK_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${JDK_TAR_GZ_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="jdk17" depends="download-jdk17"/>

    <target name="download-jdk17">
        <get src="${JDK17_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${JDK17_TAR_GZ_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="node" depends="download-node"/>

    <target name="download-node">
        <get src="${NODE_TAR_XZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${NODE_TAR_XZ_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="tomcat" depends="download-tomcat"/>

    <target name="download-tomcat">
        <get src="${TOMCAT_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${TOMCAT_TAR_GZ_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="zeebe" depends="download-zeebe"/>

    <target name="download-zeebe">
        <get src="${ZEEBE_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${ZEEBE_TAR_GZ_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="infinispan" depends="download-infinispan"/>

    <target name="download-infinispan">
        <get src="${INFINISPAN_ZIP_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${INFINISPAN_ZIP_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="hsqldb" depends="download-hsqldb"/>

    <target name="download-hsqldb">
        <get src="${HSQLDB_ZIP_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${HSQLDB_ZIP_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="ant" depends="download-ant,unpack-ant"/>

    <target name="download-ant">
        <get src="${ANT_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${ANT_TAR_GZ_FILE_NAME}"
             skipexisting="true"/>
        <get src="${ANT_EXT_XZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${ANT_EXT_XZ_JAR_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <target name="unpack-ant">
        <gunzip src="${ANT_TAR_GZ_FILE_NAME}"/>
        <untar src="${ANT_TAR_FILE_NAME}" dest="."/>
        <copy file="${ANT_EXT_XZ_JAR_FILE_NAME}" todir="${ANT_DIR_NAME}/lib"/>
        <chmod dir="${ANT_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <!-- ######################## -->

    <target name="maven" depends="download-maven,unpack-maven"/>

    <target name="download-maven">
        <get src="${MAVEN_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${MAVEN_TAR_GZ_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <target name="unpack-maven">
        <gunzip src="${MAVEN_TAR_GZ_FILE_NAME}"/>
        <untar src="${MAVEN_TAR_FILE_NAME}" dest="."/>
        <chmod dir="${MAVEN_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <!-- ######################## -->

    <target name="gradle" depends="download-gradle,unpack-gradle"/>

    <target name="download-gradle">
        <get src="${GRADLE_ZIP_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${GRADLE_ZIP_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <target name="unpack-gradle">
        <unzip src="${GRADLE_ZIP_FILE_NAME}" dest="."/>
        <chmod dir="${GRADLE_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <!-- ######################## -->

    <target name="cmake" depends="download-cmake,unpack-cmake"/>

    <target name="download-cmake">
        <get src="${CMAKE_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${CMAKE_TAR_GZ_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <target name="unpack-cmake">
        <gunzip src="${CMAKE_TAR_GZ_FILE_NAME}"/>
        <untar src="${CMAKE_TAR_FILE_NAME}" dest="."/>
        <chmod dir="${CMAKE_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <!-- ######################## -->

    <target name="julia" depends="download-julia,unpack-julia"/>

    <target name="download-julia">
        <get src="${JULIA_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${JULIA_TAR_GZ_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <target name="unpack-julia">
        <gunzip src="${JULIA_TAR_GZ_FILE_NAME}"/>
        <untar src="${JULIA_TAR_FILE_NAME}" dest="."/>
        <chmod dir="${JULIA_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <!-- ######################## -->

    <target name="go" depends="download-go,unpack-go"/>

    <target name="download-go">
        <get src="${GO_TAR_GZ_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${GO_TAR_GZ_FILE_NAME}" skipexisting="true"/>
    </target>

    <target name="unpack-go">
        <gunzip src="${GO_TAR_GZ_FILE_NAME}"/>
        <untar src="${GO_TAR_FILE_NAME}" dest="."/>
        <chmod dir="${GO_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <!-- ######################## -->

    <target name="dvc" depends="download-dvc,unpack-dvc"/>

    <target name="download-dvc">
        <get src="${DVC_RPM_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${DVC_RPM_FILE_NAME}" skipexisting="true"/>
    </target>

    <target name="unpack-dvc">
    </target>

    <!-- ######################## -->

    <target name="jenkins" depends="download-jenkins"/>

    <target name="download-jenkins">
        <get src="${JENKINS_WAR_FILE_URL}" dest="${SMI_DOWNLOAD_DOCKER_DIR}/${JENKINS_WAR_FILE_NAME}"
             skipexisting="true"/>
    </target>

    <!-- ######################## -->

    <target name="copy-to-docker" depends="make-docker-collection-dir">
        <!--copy todir="${SMI_ROCKY_DOCKER_COLLECTIONS_DIR}">
            <fileset dir="./" includes="*.rpm"/>
        </copy>
        <copy todir="${SMI_ROCKY_JAVA_COLLECTIONS_DIR}">
            <fileset dir="${JDK_DIR_NAME}"/>
        </copy-->
        <!-- copy todir="${SMI_CI_DOCKER_COLLECTIONS_DIR}/${ANT_DIR_NAME}">
            <fileset dir="${ANT_DIR_NAME}"/>
        </copy>
        <copy todir="${SMI_CI_DOCKER_COLLECTIONS_DIR}/${MAVEN_DIR_NAME}">
            <fileset dir="${MAVEN_DIR_NAME}"/>
        </copy>
        <copy todir="${SMI_CI_DOCKER_COLLECTIONS_DIR}/${GRADLE_DIR_NAME}">
            <fileset dir="${GRADLE_DIR_NAME}"/>
        </copy>
        <copy todir="${SMI_CI_DOCKER_COLLECTIONS_DIR}/${NODE_DIR_NAME}">
            <fileset dir="${NODE_DIR_NAME}"/>
        </copy>
        <copy todir="${SMI_CI_DOCKER_COLLECTIONS_DIR}/${CMAKE_DIR_NAME}">
            <fileset dir="${CMAKE_DIR_NAME}"/>
        </copy>
        <copy todir="${SMI_CI_DOCKER_COLLECTIONS_DIR}/${JULIA_DIR_NAME}">
            <fileset dir="${JULIA_DIR_NAME}"/>
        </copy>
        <copy todir="${SMI_CI_DOCKER_COLLECTIONS_DIR}/${GO_DIR_NAME}">
            <fileset dir="${GO_DIR_NAME}"/>
        </copy -->
    </target>

    <target name="make-docker-collection-dir">
        <!-- mkdir dir="${SMI_ROCKY_DOCKER_COLLECTIONS_DIR}"/>
        <mkdir dir="${SMI_ROCKY_JAVA_COLLECTIONS_DIR}"/>
        <mkdir dir="${SMI_CI_DOCKER_COLLECTIONS_DIR}"/ -->
    </target>

</project>
