<?xml version="1.0" encoding="utf-8"?>

<project name="setmy-info-rocky-java-jenkins" default="all" basedir=".">

    <property file="../collections/build.properties"/>
    <property file="build.properties"/>
    <property name="BUILDKIT_PROGRESS" value="plain"/>
    <property name="DOCKER_BUILDKIT" value="0"/>

    <!--
        ant prepare
            Build scripts package and copies it into place
        ant
            Build image
        ant push
            Push Image to docker hub
    -->

    <target name="all" depends="prepare,build"/>

    <target name="prepare"
            depends="maven,unpack-maven,gradle,unpack-gradle,node,unpack-node,cmake,unpack-cmake,ant,unpack-ant,
            dvc,unpack-dvc,jenkins,unpack-jenkins,go,unpack-go,julia,unpack-julia"/>

    <target name="build" depends="build-image,latest-tag,show-images"/>

    <target name="maven">
        <copy todir=".">
            <fileset dir="../download" includes="${MAVEN_TAR_GZ_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-maven">
        <gunzip src="./${MAVEN_TAR_GZ_FILE_NAME}"/>
        <untar src="./${MAVEN_TAR_FILE_NAME}" dest="."/>
        <chmod dir="./${MAVEN_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <target name="gradle">
        <copy todir=".">
            <fileset dir="../download" includes="${GRADLE_ZIP_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-gradle">
        <unzip src="./${GRADLE_ZIP_FILE_NAME}"
               dest="."/>
        <chmod dir="./${GRADLE_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <target name="node">
        <copy todir=".">
            <fileset dir="../download" includes="${NODE_TAR_XZ_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-node">
        <!-- wget https://repo1.maven.org/maven2/org/tukaani/xz/1.9/xz-1.9.jar under ANT/lib -->
        <unxz src="./${NODE_TAR_XZ_FILE_NAME}"/>
        <untar src="./${NODE_TAR_FILE_NAME}" dest="./"/>
        <chmod dir="./${NODE_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <target name="cmake">
        <copy todir=".">
            <fileset dir="../download" includes="${CMAKE_TAR_GZ_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-cmake">
        <gunzip src="./${CMAKE_TAR_GZ_FILE_NAME}"/>
        <untar src="./${CMAKE_TAR_FILE_NAME}" dest="."/>
        <chmod dir="./${CMAKE_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <target name="ant">
        <copy todir=".">
            <fileset dir="../download" includes="${ANT_TAR_GZ_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-ant">
        <gunzip src="./${ANT_TAR_GZ_FILE_NAME}"/>
        <untar src="./${ANT_TAR_FILE_NAME}" dest="."/>
        <chmod dir="./${ANT_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <target name="dvc">
        <copy todir=".">
            <fileset dir="../download" includes="${DVC_RPM_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-dvc">
    </target>

    <target name="jenkins">
        <copy todir=".">
            <fileset dir="../download" includes="${JENKINS_WAR_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-jenkins">
        <unzip src="./${JENKINS_WAR_FILE_NAME}" dest="./">
            <patternset>
                <include name="WEB-INF/lib/cli-${JENKINS_VERSION}.jar"/>
            </patternset>
        </unzip>
        <move file="./WEB-INF/lib/cli-${JENKINS_VERSION}.jar"
              tofile="./jenkins-cli.jar"/>
        <delete dir="./WEB-INF"/>
    </target>

    <target name="go">
        <copy todir=".">
            <fileset dir="../download" includes="${GO_TAR_GZ_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-go">
        <gunzip src="./${GO_TAR_GZ_FILE_NAME}"/>
        <untar src="./${GO_TAR_FILE_NAME}" dest="."/>
        <chmod dir="./${GO_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <target name="julia">
        <copy todir=".">
            <fileset dir="../download" includes="${JULIA_TAR_GZ_FILE_NAME}"/>
        </copy>
    </target>

    <target name="unpack-julia">
        <gunzip src="./${JULIA_TAR_GZ_FILE_NAME}"/>
        <untar src="./${JULIA_TAR_FILE_NAME}" dest="."/>
        <chmod dir="./${JULIA_DIR_NAME}/bin" perm="ugo+rx" includes="**/*"/>
    </target>

    <target name="build-image">
        <exec executable="cmd" osfamily="Windows">
            <env key="BUILDKIT_PROGRESS" value="${BUILDKIT_PROGRESS}"/>
            <env key="DOCKER_BUILDKIT" value="${DOCKER_BUILDKIT}"/>
            <arg value="/c"/>
            <arg value="docker"/>
            <arg value="build"/>
            <arg value="-t"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:${DOCKER_PROJECT_VERSION}"/>
            <arg value="."/>
        </exec>
        <exec executable="cmd" osfamily="Windows">
            <arg value="/c"/>
            <arg value="docker"/>
            <arg value="image"/>
            <arg value="list"/>
        </exec>
        <exec executable="docker" osfamily="unix">
            <env key="BUILDKIT_PROGRESS" value="${BUILDKIT_PROGRESS}"/>
            <env key="DOCKER_BUILDKIT" value="${DOCKER_BUILDKIT}"/>
            <arg value="build"/>
            <arg value="-t"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:${DOCKER_PROJECT_VERSION}"/>
            <arg value="."/>
        </exec>
        <exec executable="docker" osfamily="unix">
            <arg value="image"/>
            <arg value="list"/>
        </exec>
    </target>

    <target name="latest-tag">
        <exec executable="cmd" osfamily="Windows">
            <arg value="/c"/>
            <arg value="docker"/>
            <arg value="image"/>
            <arg value="tag"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:${DOCKER_PROJECT_VERSION}"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:latest"/>
        </exec>
        <exec executable="cmd" osfamily="Windows">
            <arg value="/c"/>
            <arg value="docker"/>
            <arg value="image"/>
            <arg value="list"/>
        </exec>
        <exec executable="docker" osfamily="unix">
            <arg value="image"/>
            <arg value="tag"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:${DOCKER_PROJECT_VERSION}"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:latest"/>
        </exec>
        <exec executable="docker" osfamily="unix">
            <arg value="image"/>
            <arg value="list"/>
        </exec>
    </target>

    <target name="show-images">
        <exec executable="cmd" osfamily="Windows">
            <arg value="/c"/>
            <arg value="docker"/>
            <arg value="image"/>
            <arg value="list"/>
        </exec>
        <exec executable="docker" osfamily="unix">
            <arg value="image"/>
            <arg value="list"/>
        </exec>
    </target>

    <target name="login">
        <exec executable="cmd" osfamily="Windows">
            <arg value="/c"/>
            <arg value="docker"/>
            <arg value="login"/>
        </exec>
        <exec executable="docker" osfamily="unix">
            <arg value="login"/>
        </exec>
    </target>

    <target name="push">
        <exec executable="cmd" osfamily="Windows">
            <arg value="/c"/>
            <arg value="docker"/>
            <arg value="image"/>
            <arg value="push"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:latest"/>
        </exec>
        <exec executable="cmd" osfamily="Windows">
            <arg value="/c"/>
            <arg value="docker"/>
            <arg value="image"/>
            <arg value="push"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:${DOCKER_PROJECT_VERSION}"/>
        </exec>
        <exec executable="docker" osfamily="unix">
            <arg value="image"/>
            <arg value="push"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:latest"/>
        </exec>
        <exec executable="docker" osfamily="unix">
            <arg value="image"/>
            <arg value="push"/>
            <arg value="${DOCKER_ID_ORGANIZATION}/${DOCKER_PROJECT_NAME}:${DOCKER_PROJECT_VERSION}"/>
        </exec>
    </target>

</project>
